import React, { useState } from 'react';
import { LembreteCard } from '@/components/lembretes/LembreteCard';
import { LembreteModal } from '@/components/lembretes/LembreteModal';

export default function Lembretes() {
  const [modalOpen, setModalOpen] = useState(false);
  const [selectedReminder, setSelectedReminder] = useState<any>(null);

  const lembretes = [
    {
      type: 'consulta' as const,
      title: 'Lembrete de Consulta',
      subtitle: 'Enviado antes da consulta',
      timing: 'Enviado 24 horas antes',
      message: `Ol√° {nome}! üëã

Lembrete: Voc√™ tem consulta amanh√£ √†s {horario}.

üìç Local: {local}
ü©∫ Dr(a): {nutricionista}

Lembre-se de trazer seus exames e estar em jejum de 12h se necess√°rio.

Qualquer d√∫vida, estou √† disposi√ß√£o!`,
      variables: ['{nome}', '{horario}', '{data}', '{local}', '{nutricionista}'],
      isActive: true
    },
    {
      type: 'confirmacao' as const,
      title: 'Confirma√ß√£o de Consulta',
      subtitle: 'Solicita confirma√ß√£o do paciente',
      timing: 'Enviado 48 horas antes',
      message: `Oi {nome}! üòä

Sua consulta est√° agendada para {data} √†s {horario}.

Voc√™ pode confirmar sua presen√ßa?

‚úÖ Responda SIM para confirmar
‚ùå Responda N√ÉO para remarcar

Aguardo seu retorno!`,
      variables: ['{nome}', '{data}', '{horario}'],
      isActive: true
    },
    {
      type: 'feedback' as const,
      title: 'Solicita√ß√£o de Feedback',
      subtitle: 'Coleta informa√ß√µes semanais',
      timing: 'Toda segunda-feira √†s 9h',
      message: `Bom dia, {nome}! ‚òÄÔ∏è

Como foi sua semana alimentar? 

Gostaria de saber:
‚Ä¢ Como est√° se sentindo?
‚Ä¢ Conseguiu seguir o plano?
‚Ä¢ Teve alguma dificuldade?

Seu feedback √© muito importante para ajustarmos o acompanhamento!

Aguardo seu retorno üíö`,
      variables: ['{nome}', '{semana}'],
      isActive: true
    },
    {
      type: 'retorno' as const,
      title: 'Follow-up de Retorno',
      subtitle: 'Reativa clientes inativos',
      timing: 'Ap√≥s 30 dias sem consulta',
      message: `Ol√° {nome}! 

Senti sua falta por aqui! üòä

Notei que faz um tempo que n√£o nos vemos. Como voc√™ est√°?

Gostaria de reagendar uma consulta para acompanharmos sua evolu√ß√£o?

Estou √† disposi√ß√£o para te ajudar a retomar seus objetivos! üí™

Responda quando puder!`,
      variables: ['{nome}', '{dias_ausente}', '{ultima_consulta}'],
      isActive: true
    },
    {
      type: 'aniversario' as const,
      title: 'Parab√©ns de Anivers√°rio',
      subtitle: 'Mensagem personalizada',
      timing: 'No dia do anivers√°rio √†s 8h',
      message: `üéâüéÇ PARAB√âNS, {nome}! üéÇüéâ

Hoje √© um dia muito especial!

Desejo que voc√™ continue alcan√ßando todos os seus objetivos de sa√∫de e bem-estar! 

Que tal comemorar de forma saud√°vel? Lembre-se: voc√™ merece celebrar e cuidar de voc√™! üíö

Aproveite seu dia! üéà‚ú®`,
      variables: ['{nome}', '{idade}'],
      isActive: true
    },
    {
      type: 'hidratacao' as const,
      title: 'Lembrete de Hidrata√ß√£o',
      subtitle: 'Incentiva consumo de √°gua',
      timing: '3x ao dia (9h, 14h, 18h)',
      message: `üíß Hora de se hidratar, {nome}!

J√° bebeu √°gua hoje? 

Lembre-se: a hidrata√ß√£o adequada √© essencial para:
‚úì Melhor metabolismo
‚úì Mais energia
‚úì Pele saud√°vel
‚úì Controle do apetite

Meta di√°ria: {meta_agua}L

Beba um copo agora! üíö`,
      variables: ['{nome}', '{meta_agua}'],
      isActive: false
    }
  ];

  const handleEdit = (lembrete: any) => {
    setSelectedReminder(lembrete);
    setModalOpen(true);
  };

  const handleTest = (lembrete: any) => {
    alert(`Teste enviado para: ${lembrete.title}`);
  };

  const handleSave = (message: string) => {
    console.log('Mensagem salva:', message);
  };

  return (
    <div style={{ padding: '24px', minHeight: '100vh' }}>
      <div style={{ maxWidth: '1400px', margin: '0 auto' }}>
        {/* Header */}
        <div style={{ marginBottom: '32px' }}>
          <h1 style={{ fontSize: '32px', fontWeight: 700, marginBottom: '8px' }}>
            Configurar Lembretes
          </h1>
          <p style={{ fontSize: '15px', opacity: 0.7 }}>
            Personalize as mensagens autom√°ticas enviadas aos pacientes
          </p>
        </div>

        {/* Lembretes Grid */}
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(450px, 1fr))', gap: '24px' }}>
          {lembretes.map((lembrete, index) => (
            <LembreteCard
              key={index}
              {...lembrete}
              onToggle={() => console.log('Toggle', lembrete.type)}
              onEdit={() => handleEdit(lembrete)}
              onTest={() => handleTest(lembrete)}
            />
          ))}
        </div>
      </div>

      {selectedReminder && (
        <LembreteModal
          isOpen={modalOpen}
          onClose={() => setModalOpen(false)}
          reminderType={selectedReminder.type}
          reminderTitle={selectedReminder.title}
          currentMessage={selectedReminder.message}
          onSave={handleSave}
        />
      )}
    </div>
  );
}
